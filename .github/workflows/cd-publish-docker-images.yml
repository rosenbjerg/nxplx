name: CD - Publish docker images

on:
  push:
    branches:
      - release
    paths:
    - 'nxplx-frontend/**'
    - 'nxplx-backend/**'
    - 'docker/gh-build/**'

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Cancel outdated workflow-runs
        uses: fkirc/skip-duplicate-actions@master
      - 
        name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64,arm
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Enable experimental Docker features
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json && sudo service docker restart
      -
        name: Login to Docker Hub
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build AMD64 image
        run: |
          NXPLX_BUILD=`printf '%(%y.%m.%d)T' -1` && \
          docker build \
            --build-arg "BUILD_VERSION=$NXPLX_BUILD" \
            --build-arg BASE_IMAGE=amd64/alpine \
            --build-arg DOTNET_RID=linux-musl-x64 \
            --build-arg TINI_BUILD=tini-static-amd64 \
            --tag mrosenbjerg/nxplx-webapi:amd64 \
            -f docker/gh-build/Dockerfile \
            .
      -
        name: Build ARM64v8 image
        run: |
          NXPLX_BUILD=`printf '%(%y.%m.%d)T' -1` && \
          docker build \
            --build-arg "BUILD_VERSION=$NXPLX_BUILD" \
            --build-arg BASE_IMAGE=arm64v8/alpine \
            --build-arg DOTNET_RID=linux-musl-arm64 \
            --build-arg TINI_BUILD=tini-static-arm64 \
            --tag mrosenbjerg/nxplx-webapi:arm64v8 \
            -f docker/gh-build/Dockerfile \
            .
      -
        name: Build ARM32v7 image
        run: |
          NXPLX_BUILD=`printf '%(%y.%m.%d)T' -1` && \
          docker build \
            --build-arg "BUILD_VERSION=$NXPLX_BUILD" \
            --build-arg BASE_IMAGE=arm32v7/alpine \
            --build-arg DOTNET_RID=linux-musl-arm \
            --build-arg TINI_BUILD=tini-static-armhf \
            --tag mrosenbjerg/nxplx-webapi:arm32v7 \
            -f docker/gh-build/Dockerfile \
            .
      -
        name: Push new images
        run: |
          docker push mrosenbjerg/nxplx-webapi:amd64 && \
          docker push mrosenbjerg/nxplx-webapi:arm64v8 && \
          docker push mrosenbjerg/nxplx-webapi:arm32v7
      -
        name: Create and push Docker manifest
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          docker manifest create mrosenbjerg/nxplx-webapi:latest \
            mrosenbjerg/nxplx-webapi:amd64 \
            mrosenbjerg/nxplx-webapi:arm64v8 \
            mrosenbjerg/nxplx-webapi:arm32v7 && \
          docker manifest annotate mrosenbjerg/nxplx-webapi:latest mrosenbjerg/nxplx-webapi:amd64 --arch amd64 --os linux && \
          docker manifest annotate mrosenbjerg/nxplx-webapi:latest mrosenbjerg/nxplx-webapi:arm64v8 --arch arm64 --os linux && \
          docker manifest annotate mrosenbjerg/nxplx-webapi:latest mrosenbjerg/nxplx-webapi:arm32v7 --arch arm --os linux && \
          docker manifest push mrosenbjerg/nxplx-webapi:latest
